{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Sections/Sections.module.css","components/App/App.module.css","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Sections/Sections.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","listStatistics","itemStatistics","String","Notification","message","FeedbackOptions","onLeaveFeedback","listFeedback","itemFeedback","id","onClick","type","Section","title","children","App","useState","setGood","setNeutral","setBad","countTotalFeedback","container","evn","target","Math","ceil","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,eAAiB,qC,gBCAvFD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,aAAe,wC,mBCAtFD,EAAOC,QAAU,CAAC,MAAQ,0B,gBCA1BD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,yB,qIC2CtCC,EAzCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,4CACA,qBAAIC,UAAWC,IAAEC,eAAjB,UACE,oBAAIF,UAAWC,IAAEE,eAAjB,SACE,uCACQ,+BAAOR,SAGjB,oBAAIK,UAAWC,IAAEE,eAAjB,SACE,0CACW,+BAAOP,SAGpB,oBAAII,UAAWC,IAAEE,eAAjB,SACE,sCACO,+BAAON,SAGhB,oBAAIG,UAAWC,IAAEE,eAAjB,SACE,wCACS,+BAAOC,OAAON,YAGzB,oBAAIE,UAAWC,IAAEE,eAAjB,SACE,mDACqB,IACnB,iCACoC,QAAjCC,OAAOL,KACJ,IACAK,OAAOL,KAHb,mBC9BGM,EADM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,K,gBCwB3BC,EAtBS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,qBAAIR,UAAWC,IAAEQ,aAAjB,UACE,oBAAIT,UAAWC,IAAES,aAAjB,SACE,wBAAQC,GAAG,OAAOC,QAASJ,EAAiBK,KAAK,SAAjD,oBAIF,oBAAIb,UAAWC,IAAES,aAAjB,SACE,wBAAQC,GAAG,UAAUC,QAASJ,EAAiBK,KAAK,SAApD,uBAIF,oBAAIb,UAAWC,IAAES,aAAjB,SACE,wBAAQC,GAAG,MAAMC,QAASJ,EAAiBK,KAAK,SAAhD,uB,gBCLOC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIhB,UAAWC,IAAEc,MAAjB,SAAyBA,IACxBC,M,gBC2GQC,EAzGH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBwB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOrB,EAAP,KAAYwB,EAAZ,KAkBMC,EAAqB,kBAAM3B,EAAOC,EAAUC,GAOlD,OACE,sBAAKG,UAAWC,IAAEsB,UAAlB,UACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBP,gBA1BE,SAAAgB,GACvB,OAAQA,EAAIC,OAAOd,IACjB,IAAK,OACHQ,EAAQxB,EAAO,GACf,MACF,IAAK,UACHyB,EAAWxB,EAAU,GACrB,MACF,IAAK,MACHyB,EAAOxB,EAAM,GACb,MACF,QACE,aAgBF,cAAC,EAAD,UAC4B,IAAzByB,IACC,cAAC,EAAD,CACExB,MAAOwB,EACP3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLE,mBAjB8B,WAEtC,OAD2B2B,KAAKC,KAAMhC,GAAQA,EAAOC,EAAUC,GAAQ,QAmBjE,cAAC,EAAD,CAAcS,QAAQ,+BC9ChCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.56865ff4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listStatistics\":\"Statistics_listStatistics__27poK\",\"itemStatistics\":\"Statistics_itemStatistics__W8YLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listFeedback\":\"FeedbackOptions_listFeedback__3I2BM\",\"itemFeedback\":\"FeedbackOptions_itemFeedback__1GiQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Sections_title__uez2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__Yo6G7\",\"container\":\"App_container__1JRFe\"};","import React from 'react';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2>Statistics</h2>\r\n      <ul className={s.listStatistics}>\r\n        <li className={s.itemStatistics}>\r\n          <p>\r\n            Good: <span>{good}</span>\r\n          </p>\r\n        </li>\r\n        <li className={s.itemStatistics}>\r\n          <p>\r\n            Neutral: <span>{neutral}</span>\r\n          </p>\r\n        </li>\r\n        <li className={s.itemStatistics}>\r\n          <p>\r\n            Bad: <span>{bad}</span>\r\n          </p>\r\n        </li>\r\n        <li className={s.itemStatistics}>\r\n          <p>\r\n            Total: <span>{String(total())}</span>\r\n          </p>\r\n        </li>\r\n        <li className={s.itemStatistics}>\r\n          <p>\r\n            Positive feedback:{' '}\r\n            <span>\r\n              {String(positivePercentage()) === 'NaN'\r\n                ? 100\r\n                : String(positivePercentage())}\r\n              %\r\n            </span>\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","const Notification = ({ message }) => <p>{message}</p>;\r\nexport default Notification;\r\n","import s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <ul className={s.listFeedback}>\r\n      <li className={s.itemFeedback}>\r\n        <button id=\"good\" onClick={onLeaveFeedback} type=\"button\">\r\n          Good\r\n        </button>\r\n      </li>\r\n      <li className={s.itemFeedback}>\r\n        <button id=\"neutral\" onClick={onLeaveFeedback} type=\"button\">\r\n          Neutral\r\n        </button>\r\n      </li>\r\n      <li className={s.itemFeedback}>\r\n        <button id=\"bad\" onClick={onLeaveFeedback} type=\"button\">\r\n          Bad\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import s from './Sections.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\nimport { useState } from 'react';\nimport Statistics from '../Statistics/Statistics';\nimport Notification from '../Notification/Notification';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Section from '../Sections/Sections';\nimport s from './App.module.css';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const increasesCounter = evn => {\n    switch (evn.target.id) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () => {\n    const positivePercentage = Math.ceil((good / (good + neutral + bad)) * 100);\n    return positivePercentage;\n  };\n\n  return (\n    <div className={s.container}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={increasesCounter} />\n      </Section>\n      <Section>\n        {countTotalFeedback() !== 0 ? (\n          <Statistics\n            total={countTotalFeedback}\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </Section>\n    </div>\n  );\n};\n\n// class App extends React.Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n// increasesCounter = evn => {\n//   this.setState(prevState => {\n//     if (evn.target.id === 'good') {\n//       return { good: prevState.good + 1 };\n//     }\n//     if (evn.target.id === 'neutral') {\n//       return { neutral: prevState.neutral + 1 };\n//     }\n//     if (evn.target.id === 'bad') {\n//       return { bad: prevState.bad + 1 };\n//     }\n//     this.countTotalFeedback();\n//   });\n// };\n\n// countPositiveFeedbackPercentage = () => {\n//   const positivePercentage = Math.ceil(\n//     (this.state.good /\n//       (this.state.good + this.state.neutral + this.state.bad)) *\n//       100,\n//   );\n//   return positivePercentage;\n// };\n\n//   render() {\n//     return (\n//       <div className={s.container}>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions onLeaveFeedback={this.increasesCounter} />\n//         </Section>\n//         <Section>\n//           {this.countTotalFeedback() !== 0 ? (\n//             <Statistics\n//               total={this.countTotalFeedback}\n//               good={this.state.good}\n//               neutral={this.state.neutral}\n//               bad={this.state.bad}\n//               positivePercentage={this.countPositiveFeedbackPercentage}\n//             />\n//           ) : (\n//             <Notification message=\"There is no feedback\" />\n//           )}\n//         </Section>\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}